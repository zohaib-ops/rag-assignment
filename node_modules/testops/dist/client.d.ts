import { Langfuse as TestOpsBase, LangfuseOptions as TestOpsBaseOptions, LangfuseConfig as TestOpsBaseConfig } from 'langfuse';
import { DatasetRuns } from './dataset-runs';
import { Datasets } from './datasets';
import { ExperimentRuns } from './experiment-runs';
import { Experiments } from './experiments';
export { ChatPromptClient, LangfuseEventClient as TestOpsEventClient, LangfuseGenerationClient as TestOpsGenerationClient, LangfuseMedia as TestOpsMediaBase, LangfuseParent as TestOpsParent, LangfusePromptClient as TestOpsPromptClient, LangfusePromptRecord as TestOpsPromptRecord, LangfusePublicApi as TestOpsPublicApi, LangfuseSpanClient as TestOpsSpanClient, LangfuseTraceClient as TestOpsTraceClient, LangfuseWeb as TestOpsWebClient, TextPromptClient, } from 'langfuse';
export declare const observeOpenAI: (sdk: any, config?: any) => any;
export type TestOpsConfig = TestOpsBaseOptions & {
    writeOnlyKey?: string;
};
export type TestOpsPublicConfig = Omit<TestOpsBaseConfig, 'publicKey' | 'secretKey'> & {
    writeOnlyKey: string;
};
/**
 * TestOps Client - Wraps Langfuse with minimal test-specific enhancements
 * Uses composition instead of inheritance to avoid shared state issues
 * Dynamically binds all Langfuse methods for complete API coverage
 */
export declare class TestOps extends TestOpsBase {
    private readonly _config;
    private _experimentRuns?;
    private _experiments?;
    private _datasetRuns?;
    private _datasets?;
    constructor(config?: TestOpsConfig);
    /**
     * Access to experiment runs operations.
     * Lazy initialization matching Python SDK pattern.
     */
    get experimentRuns(): ExperimentRuns;
    /**
     * Set the experiment runs client.
     */
    set experimentRuns(value: ExperimentRuns);
    /**
     * Access to experiments operations.
     * Lazy initialization matching Python SDK pattern.
     */
    get experiments(): Experiments;
    /**
     * Set the experiments client.
     */
    set experiments(value: Experiments);
    /**
     * Access to dataset runs operations.
     * Lazy initialization matching Python SDK pattern.
     */
    get datasetRuns(): DatasetRuns;
    /**
     * Set the dataset runs client.
     */
    set datasetRuns(value: DatasetRuns);
    /**
     * Access to datasets operations.
     * Lazy initialization matching Python SDK pattern.
     */
    get datasets(): Datasets;
    /**
     * Set the datasets client.
     */
    set datasets(value: Datasets);
}
export { TestOps as TestOpsClient };
//# sourceMappingURL=client.d.ts.map