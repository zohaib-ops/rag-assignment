/**
 * Type definitions for TestOps experiment operations.
 * Mirrors the Python SDK's types.py structure for consistency.
 */
/**
 * Status enum for experiment runs
 */
export declare enum ExperimentRunStatus {
    PENDING = "PENDING",
    RUNNING = "RUNNING",
    COMPLETED = "COMPLETED",
    FAILED = "FAILED",
    CANCELLED = "CANCELLED"
}
/**
 * Request interface for creating an experiment run
 */
export interface CreateExperimentRunRequest {
    experimentId: string;
    llmColumnName?: string;
    concurrency?: number;
    runConfig?: Record<string, any>;
}
/**
 * Configuration interface for experiment runs
 */
export interface ExperimentRunConfig {
    provider?: string;
    adapter?: string;
}
/**
 * Response interface for experiment run operations
 */
export interface ExperimentRunResponse {
    id: string;
    name: string;
    description?: string;
    version: number;
    status: ExperimentRunStatus;
    metadata?: Record<string, any>;
    error?: string;
    jobId?: string;
    projectId: string;
    experimentId: string;
    datasetRunId: string;
    promptId: string;
    experimentEvaluatorId: string;
    createdBy?: string;
    createdAt: string;
    updatedAt: string;
}
/**
 * Response interface for listing experiment runs
 */
export interface ListExperimentRunsResponse {
    experimentRuns: ExperimentRunResponse[];
    totalCount: number;
}
/**
 * Request interface for listing experiment runs
 */
export interface ListExperimentRunsRequest {
    experimentId?: string;
    page: number;
    limit: number;
}
/**
 * Response interface for experiment operations
 */
export interface ExperimentResponse {
    id: string;
    name: string;
    description?: string;
    llmColumnName?: string;
    concurrency: number;
    projectId: string;
    datasetId: string;
    promptId?: string;
    datasetRunTagId?: string;
    experimentEvaluatorId: string;
    createdBy?: string;
    createdAt: string;
    updatedAt: string;
}
/**
 * Request interface for creating an experiment with dataset run tag
 */
export interface CreateExperimentWithTagRequest {
    name: string;
    description?: string;
    datasetRunTagId: string;
    experimentEvaluatorId: string;
    llmColumnName?: string;
    concurrency?: number;
}
/**
 * Request interface for creating an experiment with prompt and dataset
 */
export interface CreateExperimentWithPromptRequest {
    name: string;
    description?: string;
    promptId: string;
    datasetId: string;
    experimentEvaluatorId: string;
    llmColumnName?: string;
    concurrency?: number;
}
/**
 * Response interface for listing experiments
 */
export interface ListExperimentsResponse {
    experiments: ExperimentResponse[];
    totalCount: number;
}
/**
 * Request interface for updating an experiment run
 */
export interface UpdateExperimentRunRequest {
    status?: ExperimentRunStatus;
    result?: Record<string, any>;
    error?: string;
    metadata?: Record<string, any>;
}
/**
 * Subscription result interface for experiment run monitoring
 */
export interface ExperimentRunSubscriptionResult {
    finalStatus: 'COMPLETED' | 'FAILED' | 'CANCELLED' | 'TIMEOUT';
    experimentRunData: ExperimentRunResponse;
}
//# sourceMappingURL=experiment-types.d.ts.map